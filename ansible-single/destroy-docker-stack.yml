---
# Ansible playbook to destroy container, volume, and S3 resources
# associated with the LCP stack deployment

- name: Remove the demo LCP stack resources
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - "vars/{{ varfile }}.yml"

  tasks:
# Do I need a human confirmation before proceeding?

    - name: Check that the docker-compose.yml exists
      stat:
        path: docker-compose.yml
      delegate_to: localhost
      register: stat_result

    - name: Remove allocated Docker resources from the compose file
      docker_compose:
        project_src: "{{ docker_host_lcp_home }}/docker"
        state: absent
      when: stat_result.stat.exists

    - name: Remove the MariaDB-MySQL container
      docker_container:
        name: "database"
        state: absent
  
    - name: Remove images related to the stack
      docker_image:
        state: absent
        name: "{{ item.name }}"
        tag: "{{ item.tag }}"
      loop:
        - name: readium/testfrontend
          tag: working
        - name: readium/lsdserver
          tag: working
        - name: readium/lcpserver
          tag: working
        - name: readium/lcpencrypt
          tag: working
        - name: atmoz/sftp
          tag: alpine
        - name: mariadb
          tag: latest

    - name: Remove the data-file volumes
      docker_volume:
        name: "{{ item }}"
        state: absent
      loop:
        - lcp_dbdata
        - docker_lcp_encfiles
        - docker_lcp_rawfiles

    - name: Remove temp directories
      file:
        path: "{{ docker_host_lcp_home }}/{{ item }}"
        state: absent
      loop:
        - db
        - sftp
        - docker

    - name: Remove host LCP directory
      file:
        path: "{{ docker_host_lcp_home }}"
        state: absent

    - name: Block to remove S3 resources if S3 storage is selected
      block:
        - name: Remove the content IAM group (and attached user)
          iam_group:
            name: "{{ s3_storage_user_group_name }}"
            purge_users: true
            state: absent

        - name: Remove the IAM group S3 bucket/folder access policy
          iam_managed_policy:
            policy_name: "{{ s3_storage_policy_name }}"
            policy_description: "{{ s3_storage_policy_description }}"
            policy: "{{ lookup('template', 'templates/s3-group-access-policy.json.j2') }}"
            state: absent

        - name: Remove content S3 storage bucket
          aws_s3:
            region: "{{ aws_region }}"
            bucket: "{{ s3_content_bucket_name }}"
            mode: delete

        - name: Remove IAM user
          iam:
            iam_type: user
            name: "{{ iam_user_name }}"
            state: absent

        - name: Blank user key to store
          set_fact:
            iam_user_key: ""
        - name: Blank user secret to store
          set_fact:
            iam_user_secret: ""

        - name: Copy programmatic blank user credentials to local file
          template:
            src: roles/create_iam_user/templates/iam_user_credentials.yml.j2
            dest: "{{ iam_user_credentials_file }}"
          delegate_to: localhost
      when: storage_mode == 's3'
